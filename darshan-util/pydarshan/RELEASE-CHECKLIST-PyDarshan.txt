Notes on how to release a new version of PyDarshan
2020-06
-----------------------

 - Ensure python dev environment with dev dependencies, if not already present
    (- python3 -m venv venv)
    (- source venv/bin/activate)
    (- pip install .[dev,test]    # deps for packaging, testing, and docs generation)

 - Update CHANGELOG.rst
    - commit
 - Update version numbers in:
    darshan/__init__.py
 - determine whether new job summary tool features warrant generating a new summary report to include in docs
     (stored @ /nfs/pub_html/gce/projects/darshan/docs/example_report.html)

 - Submit to PyPI using cibuildwheel/twine:
    - pipx run build --sdist
        (in the pydarshan directory, creates a source distribution)
    - download wheel artifacts from GitHub, copy to 'dist/' directory created above
        (click on Actions in GitHub, find most recent "Build Wheels" workflow run with artifacts)
        (download artifact zip (called 'pydarshan-wheels-all'), extract wheels to 'dist/' directory)
    - pipx run twine upload dist/*
        (requires PyPI credentials for darshan project)
        (use '--repository testpypi' to test wheels using https://test.pypi.org/project/darshan/ before uploading to PyPI)

 - Add/update spack package: py-darshan
    - add version entry
    - add hash of release tar.gz from pypi (because that one should always exist) / or use mcs darshan mirror
    - check if new dependencies are required (compare to requirements.txt)
    - submit as pull request to https://github.com/spack/spack

 - Announce:
    - Regular Darshan Release: Copy release notes for PyDarshan and attach as seperate section (mailinglist, website/blog)
    - PyDarshan only: Post release note section of PyDarshan (mailinglist, website/blog)

Note on Versionsformat:
    Whenever libdarshan-utils has a version change, PyDarshan is bumped accordingly.
    4th position version numbers allows for PyDarshan to be on a faster release cycle
